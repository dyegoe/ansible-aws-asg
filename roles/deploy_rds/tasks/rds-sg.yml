---
- name: Set RDS Secutiry Group stack name
  set_fact:
    rds_sg_stack_name: "{{ project_name }}-rds-sg"

- ec2_group_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    filters:
      group-id: "{{ asg_sg }}"
  when: (asg_sg is defined) and (not asg_sg == '') and (not asg_sg == None)
  register: asg_sg_facts

- debug:
    msg: The ASG Security group var (asg_sg) has a wrong id on var files (inventories/groups_vars/all.yml)
  when: asg_sg_facts['security_groups']|length==0

- name: Unset asg_sg var
  set_fact:
    asg_sg:
  when: asg_sg_facts['security_groups']|length==0

- name: Update group_vars/all.yml and set asg_sg with ASG security group id
  lineinfile:
    path: "{{ playbook_dir }}/inventories/group_vars/all.yml"
    state: present
    regexp: '^asg_sg:.*'
    line: "asg_sg:"
  when: asg_sg_facts['security_groups']|length==0

- name: Deploy a RDS Security Group stack if asg_sg isn't set
  cloudformation:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    stack_name: "{{ rds_sg_stack_name }}"
    state: "present"
    template: "roles/deploy_rds/files/rds-sg-open-world.json"
    template_parameters:
      TagProject: "{{ project_name }}"
      VpcId: "{{ vpc_id }}"
    tags:
      Stack: "{{ rds_sg_stack_name }}"
      Project: "{{ project_name }}"
  when: (asg_sg is undefined) or (asg_sg == '') or (asg_sg == None)

- name: Deploy a RDS Security Group stack asg_sg is set
  cloudformation:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    stack_name: "{{ rds_sg_stack_name }}"
    state: "present"
    template: "roles/deploy_rds/files/rds-sg-asg.json"
    template_parameters:
      TagProject: "{{ project_name }}"
      VpcId: "{{ vpc_id }}"
      AsgSg: "{{ asg_sg }}"
    tags:
      Stack: "{{ rds_sg_stack_name }}"
      Project: "{{ project_name }}"
  when: (asg_sg is defined) and (not asg_sg == '') and (not asg_sg == None)

- name: Get RDS stack facts
  cloudformation_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    stack_name: "{{ rds_sg_stack_name }}"

- name: Set variables with cloudformation output
  set_fact:
    rds_sg: "{{ ansible_facts['cloudformation'][rds_sg_stack_name]['stack_outputs']['DatabaseSecurityGroup'] }}"