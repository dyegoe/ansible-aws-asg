---
- name: Set VPC stack name
  set_fact:
    asg_stack_name: "{{ project_name }}-asg"

- import_tasks: gen_base64_files.yml

- name: Gather facts about ami
  ec2_ami_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    owners: amazon
    filters:
      name: "{{ ec2_image_name }}"
  register: ami_facts

- name: Deploy an Auto Scaling stack
  cloudformation:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    stack_name: "{{ asg_stack_name }}"
    state: "present"
    template: "{{ asg_cloudformation_tmp['path'] }}"
    template_parameters:
      TagProject: "{{ project_name }}"
      KeyName: "{{ project_name }}"
      InstanceType: "t2.small"
      ImageId: "{{ ami_facts['images'][0]['image_id'] }}"
      VpcId: "{{ vpc_id }}"
      SubnetIds: "{{ subnet1_id }},{{ subnet2_id }},{{ subnet3_id }}"
      SubnetAZ: "{{ aws_region }}a,{{ aws_region }}b,{{ aws_region }}c"
      SshPort: "{{ ec2_sshport }}"
      ServerFromPort: "{{ app_port }}"
      ServerToPort: "{{ app_port }}"
      MaxSize: "{{ asg_max_size }}"
      StartSize: "{{ asg_start_size }}" 
      AlbScheme: internet-facing
      RegistryURL: "{{ ecr_url }}"
    tags:
      Stack: "{{ asg_stack_name }}"
      Project: "{{ project_name }}"

- name: Get ASG stack facts
  cloudformation_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    stack_name: "{{ asg_stack_name }}"

- name: Set variables with cloudformation output
  set_fact:
    alb_url: "{{ ansible_facts['cloudformation'][asg_stack_name]['stack_outputs']['AlbUrl'] }}"
    asg_sg: "{{ ansible_facts['cloudformation'][asg_stack_name]['stack_outputs']['AsgSecurityGroup'] }}"
    asg: "{{ ansible_facts['cloudformation'][asg_stack_name]['stack_outputs']['AutoScalingGroup'] }}"